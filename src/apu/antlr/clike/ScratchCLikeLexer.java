// Generated from ScratchCLike.g4 by ANTLR 4.4

  package apu.antlr.clike;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class ScratchCLikeLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		BOOL_TRUE=1, IF_TAG=2, ELSE_TAG=3, BOOL_AND=4, BOOL_OR=5, BOOL_NOT=6, 
		BOOL_EQUALS=7, BOOL_NEQUALS=8, BOOL_GT=9, BOOL_LT=10, BOOL_GTE=11, BOOL_LTE=12, 
		MATH_PLUS=13, MATH_MINUS=14, MATH_TIMES=15, MATH_DIVIDE=16, MATH_MODULO=17, 
		FOR_TAG=18, WHILE_TAG=19, METHOD_DEF_TAG=20, ATOMIC_METHOD_TAG=21, WHEN_TAG=22, 
		WHEN_CLICKED=23, WHEN_RECEIVE=24, WHEN_KEY=25, WHEN_CLONED=26, WHEN_SENSOR=27, 
		WHEN_FLAG=28, REPEAT_TAG=29, SINGLE_FRAME_TAG=30, ARRAY_TAG=31, IDENTIFIER=32, 
		STRINGLITERAL=33, OPENP=34, CLOSEP=35, OPENB=36, CLOSEB=37, SEMICOLON=38, 
		EQUALS=39, PLUS_EQUALS=40, MINUS_EQUALS=41, PLUS_PLUS=42, MINUS_MINUS=43, 
		COMMA=44, OPENC=45, CLOSEC=46, NUMBER=47, LETTER=48, WS=49, BlockComment=50, 
		LineComment=51;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'"
	};
	public static final String[] ruleNames = {
		"BOOL_TRUE", "IF_TAG", "ELSE_TAG", "BOOL_AND", "BOOL_OR", "BOOL_NOT", 
		"BOOL_EQUALS", "BOOL_NEQUALS", "BOOL_GT", "BOOL_LT", "BOOL_GTE", "BOOL_LTE", 
		"MATH_PLUS", "MATH_MINUS", "MATH_TIMES", "MATH_DIVIDE", "MATH_MODULO", 
		"FOR_TAG", "WHILE_TAG", "METHOD_DEF_TAG", "ATOMIC_METHOD_TAG", "WHEN_TAG", 
		"WHEN_CLICKED", "WHEN_RECEIVE", "WHEN_KEY", "WHEN_CLONED", "WHEN_SENSOR", 
		"WHEN_FLAG", "REPEAT_TAG", "SINGLE_FRAME_TAG", "ARRAY_TAG", "IDENTIFIER", 
		"STRINGLITERAL", "AChar", "AEscapeSequence", "OPENP", "CLOSEP", "OPENB", 
		"CLOSEB", "SEMICOLON", "EQUALS", "PLUS_EQUALS", "MINUS_EQUALS", "PLUS_PLUS", 
		"MINUS_MINUS", "COMMA", "OPENC", "CLOSEC", "NUMBER", "LETTER", "WS", "BlockComment", 
		"LineComment"
	};


	public ScratchCLikeLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "ScratchCLike.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\65\u0174\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\4\3\4\3\4"+
		"\3\4\3\4\3\5\3\5\3\5\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3"+
		"\n\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21"+
		"\3\21\3\22\3\22\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\25"+
		"\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27"+
		"\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31"+
		"\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32"+
		"\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34"+
		"\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34"+
		"\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36"+
		"\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37"+
		"\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3!\3!\3!\7!\u0116\n!\f!\16!\u0119\13"+
		"!\3\"\3\"\7\"\u011d\n\"\f\"\16\"\u0120\13\"\3\"\3\"\3#\3#\5#\u0126\n#"+
		"\3$\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3)\3)\3*\3*\3+\3+\3+\3,\3,\3,\3-\3"+
		"-\3-\3.\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\62\6\62\u014a\n\62\r\62\16\62"+
		"\u014b\3\62\3\62\6\62\u0150\n\62\r\62\16\62\u0151\5\62\u0154\n\62\3\63"+
		"\3\63\3\64\3\64\3\64\3\64\3\65\3\65\3\65\3\65\7\65\u0160\n\65\f\65\16"+
		"\65\u0163\13\65\3\65\3\65\3\65\3\65\3\65\3\66\3\66\3\66\3\66\7\66\u016e"+
		"\n\66\f\66\16\66\u0171\13\66\3\66\3\66\3\u0161\2\67\3\3\5\4\7\5\t\6\13"+
		"\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'"+
		"\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E\2G\2I$K"+
		"%M&O\'Q(S)U*W+Y,[-]._/a\60c\61e\62g\63i\64k\65\3\2\7\6\2\f\f\17\17$$^"+
		"^\f\2$$))AA^^cdhhppttvvxx\5\2C\\aac|\5\2\13\f\17\17\"\"\4\2\f\f\17\17"+
		"\u017a\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2"+
		"\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3"+
		"\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2"+
		"\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2"+
		"/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2"+
		"\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2I\3\2\2\2\2"+
		"K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3"+
		"\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2"+
		"\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\3m\3\2\2\2\5r\3\2\2\2\7"+
		"u\3\2\2\2\tz\3\2\2\2\13}\3\2\2\2\r\u0080\3\2\2\2\17\u0082\3\2\2\2\21\u0085"+
		"\3\2\2\2\23\u0088\3\2\2\2\25\u008a\3\2\2\2\27\u008c\3\2\2\2\31\u008f\3"+
		"\2\2\2\33\u0092\3\2\2\2\35\u0094\3\2\2\2\37\u0096\3\2\2\2!\u0098\3\2\2"+
		"\2#\u009a\3\2\2\2%\u009c\3\2\2\2\'\u00a0\3\2\2\2)\u00a6\3\2\2\2+\u00ab"+
		"\3\2\2\2-\u00b3\3\2\2\2/\u00b9\3\2\2\2\61\u00c1\3\2\2\2\63\u00ca\3\2\2"+
		"\2\65\u00d5\3\2\2\2\67\u00dc\3\2\2\29\u00ee\3\2\2\2;\u00f8\3\2\2\2=\u00ff"+
		"\3\2\2\2?\u010c\3\2\2\2A\u0112\3\2\2\2C\u011a\3\2\2\2E\u0125\3\2\2\2G"+
		"\u0127\3\2\2\2I\u012a\3\2\2\2K\u012c\3\2\2\2M\u012e\3\2\2\2O\u0130\3\2"+
		"\2\2Q\u0132\3\2\2\2S\u0134\3\2\2\2U\u0136\3\2\2\2W\u0139\3\2\2\2Y\u013c"+
		"\3\2\2\2[\u013f\3\2\2\2]\u0142\3\2\2\2_\u0144\3\2\2\2a\u0146\3\2\2\2c"+
		"\u0149\3\2\2\2e\u0155\3\2\2\2g\u0157\3\2\2\2i\u015b\3\2\2\2k\u0169\3\2"+
		"\2\2mn\7v\2\2no\7t\2\2op\7w\2\2pq\7g\2\2q\4\3\2\2\2rs\7k\2\2st\7h\2\2"+
		"t\6\3\2\2\2uv\7g\2\2vw\7n\2\2wx\7u\2\2xy\7g\2\2y\b\3\2\2\2z{\7(\2\2{|"+
		"\7(\2\2|\n\3\2\2\2}~\7~\2\2~\177\7~\2\2\177\f\3\2\2\2\u0080\u0081\7#\2"+
		"\2\u0081\16\3\2\2\2\u0082\u0083\7?\2\2\u0083\u0084\7?\2\2\u0084\20\3\2"+
		"\2\2\u0085\u0086\7#\2\2\u0086\u0087\7?\2\2\u0087\22\3\2\2\2\u0088\u0089"+
		"\7@\2\2\u0089\24\3\2\2\2\u008a\u008b\7>\2\2\u008b\26\3\2\2\2\u008c\u008d"+
		"\7@\2\2\u008d\u008e\7?\2\2\u008e\30\3\2\2\2\u008f\u0090\7>\2\2\u0090\u0091"+
		"\7?\2\2\u0091\32\3\2\2\2\u0092\u0093\7-\2\2\u0093\34\3\2\2\2\u0094\u0095"+
		"\7/\2\2\u0095\36\3\2\2\2\u0096\u0097\7,\2\2\u0097 \3\2\2\2\u0098\u0099"+
		"\7\61\2\2\u0099\"\3\2\2\2\u009a\u009b\7\'\2\2\u009b$\3\2\2\2\u009c\u009d"+
		"\7h\2\2\u009d\u009e\7q\2\2\u009e\u009f\7t\2\2\u009f&\3\2\2\2\u00a0\u00a1"+
		"\7y\2\2\u00a1\u00a2\7j\2\2\u00a2\u00a3\7k\2\2\u00a3\u00a4\7n\2\2\u00a4"+
		"\u00a5\7g\2\2\u00a5(\3\2\2\2\u00a6\u00a7\7x\2\2\u00a7\u00a8\7q\2\2\u00a8"+
		"\u00a9\7k\2\2\u00a9\u00aa\7f\2\2\u00aa*\3\2\2\2\u00ab\u00ac\7B\2\2\u00ac"+
		"\u00ad\7c\2\2\u00ad\u00ae\7v\2\2\u00ae\u00af\7q\2\2\u00af\u00b0\7o\2\2"+
		"\u00b0\u00b1\7k\2\2\u00b1\u00b2\7e\2\2\u00b2,\3\2\2\2\u00b3\u00b4\7B\2"+
		"\2\u00b4\u00b5\7y\2\2\u00b5\u00b6\7j\2\2\u00b6\u00b7\7g\2\2\u00b7\u00b8"+
		"\7p\2\2\u00b8.\3\2\2\2\u00b9\u00ba\7e\2\2\u00ba\u00bb\7n\2\2\u00bb\u00bc"+
		"\7k\2\2\u00bc\u00bd\7e\2\2\u00bd\u00be\7m\2\2\u00be\u00bf\7g\2\2\u00bf"+
		"\u00c0\7f\2\2\u00c0\60\3\2\2\2\u00c1\u00c2\7t\2\2\u00c2\u00c3\7g\2\2\u00c3"+
		"\u00c4\7e\2\2\u00c4\u00c5\7g\2\2\u00c5\u00c6\7k\2\2\u00c6\u00c7\7x\2\2"+
		"\u00c7\u00c8\7g\2\2\u00c8\u00c9\7f\2\2\u00c9\62\3\2\2\2\u00ca\u00cb\7"+
		"m\2\2\u00cb\u00cc\7g\2\2\u00cc\u00cd\7{\2\2\u00cd\u00ce\7R\2\2\u00ce\u00cf"+
		"\7t\2\2\u00cf\u00d0\7g\2\2\u00d0\u00d1\7u\2\2\u00d1\u00d2\7u\2\2\u00d2"+
		"\u00d3\7g\2\2\u00d3\u00d4\7f\2\2\u00d4\64\3\2\2\2\u00d5\u00d6\7e\2\2\u00d6"+
		"\u00d7\7n\2\2\u00d7\u00d8\7q\2\2\u00d8\u00d9\7p\2\2\u00d9\u00da\7g\2\2"+
		"\u00da\u00db\7f\2\2\u00db\66\3\2\2\2\u00dc\u00dd\7u\2\2\u00dd\u00de\7"+
		"g\2\2\u00de\u00df\7p\2\2\u00df\u00e0\7u\2\2\u00e0\u00e1\7q\2\2\u00e1\u00e2"+
		"\7t\2\2\u00e2\u00e3\7I\2\2\u00e3\u00e4\7t\2\2\u00e4\u00e5\7g\2\2\u00e5"+
		"\u00e6\7c\2\2\u00e6\u00e7\7v\2\2\u00e7\u00e8\7g\2\2\u00e8\u00e9\7t\2\2"+
		"\u00e9\u00ea\7V\2\2\u00ea\u00eb\7j\2\2\u00eb\u00ec\7c\2\2\u00ec\u00ed"+
		"\7p\2\2\u00ed8\3\2\2\2\u00ee\u00ef\7i\2\2\u00ef\u00f0\7t\2\2\u00f0\u00f1"+
		"\7g\2\2\u00f1\u00f2\7g\2\2\u00f2\u00f3\7p\2\2\u00f3\u00f4\7H\2\2\u00f4"+
		"\u00f5\7n\2\2\u00f5\u00f6\7c\2\2\u00f6\u00f7\7i\2\2\u00f7:\3\2\2\2\u00f8"+
		"\u00f9\7t\2\2\u00f9\u00fa\7g\2\2\u00fa\u00fb\7r\2\2\u00fb\u00fc\7g\2\2"+
		"\u00fc\u00fd\7c\2\2\u00fd\u00fe\7v\2\2\u00fe<\3\2\2\2\u00ff\u0100\7B\2"+
		"\2\u0100\u0101\7u\2\2\u0101\u0102\7k\2\2\u0102\u0103\7p\2\2\u0103\u0104"+
		"\7i\2\2\u0104\u0105\7n\2\2\u0105\u0106\7g\2\2\u0106\u0107\7h\2\2\u0107"+
		"\u0108\7t\2\2\u0108\u0109\7c\2\2\u0109\u010a\7o\2\2\u010a\u010b\7g\2\2"+
		"\u010b>\3\2\2\2\u010c\u010d\7c\2\2\u010d\u010e\7t\2\2\u010e\u010f\7t\2"+
		"\2\u010f\u0110\7c\2\2\u0110\u0111\7{\2\2\u0111@\3\2\2\2\u0112\u0117\5"+
		"e\63\2\u0113\u0116\5e\63\2\u0114\u0116\5c\62\2\u0115\u0113\3\2\2\2\u0115"+
		"\u0114\3\2\2\2\u0116\u0119\3\2\2\2\u0117\u0115\3\2\2\2\u0117\u0118\3\2"+
		"\2\2\u0118B\3\2\2\2\u0119\u0117\3\2\2\2\u011a\u011e\7$\2\2\u011b\u011d"+
		"\5E#\2\u011c\u011b\3\2\2\2\u011d\u0120\3\2\2\2\u011e\u011c\3\2\2\2\u011e"+
		"\u011f\3\2\2\2\u011f\u0121\3\2\2\2\u0120\u011e\3\2\2\2\u0121\u0122\7$"+
		"\2\2\u0122D\3\2\2\2\u0123\u0126\n\2\2\2\u0124\u0126\5G$\2\u0125\u0123"+
		"\3\2\2\2\u0125\u0124\3\2\2\2\u0126F\3\2\2\2\u0127\u0128\7^\2\2\u0128\u0129"+
		"\t\3\2\2\u0129H\3\2\2\2\u012a\u012b\7*\2\2\u012bJ\3\2\2\2\u012c\u012d"+
		"\7+\2\2\u012dL\3\2\2\2\u012e\u012f\7}\2\2\u012fN\3\2\2\2\u0130\u0131\7"+
		"\177\2\2\u0131P\3\2\2\2\u0132\u0133\7=\2\2\u0133R\3\2\2\2\u0134\u0135"+
		"\7?\2\2\u0135T\3\2\2\2\u0136\u0137\7-\2\2\u0137\u0138\7?\2\2\u0138V\3"+
		"\2\2\2\u0139\u013a\7/\2\2\u013a\u013b\7?\2\2\u013bX\3\2\2\2\u013c\u013d"+
		"\7-\2\2\u013d\u013e\7-\2\2\u013eZ\3\2\2\2\u013f\u0140\7/\2\2\u0140\u0141"+
		"\7/\2\2\u0141\\\3\2\2\2\u0142\u0143\7.\2\2\u0143^\3\2\2\2\u0144\u0145"+
		"\7]\2\2\u0145`\3\2\2\2\u0146\u0147\7_\2\2\u0147b\3\2\2\2\u0148\u014a\4"+
		"\62;\2\u0149\u0148\3\2\2\2\u014a\u014b\3\2\2\2\u014b\u0149\3\2\2\2\u014b"+
		"\u014c\3\2\2\2\u014c\u0153\3\2\2\2\u014d\u014f\7\60\2\2\u014e\u0150\4"+
		"\62;\2\u014f\u014e\3\2\2\2\u0150\u0151\3\2\2\2\u0151\u014f\3\2\2\2\u0151"+
		"\u0152\3\2\2\2\u0152\u0154\3\2\2\2\u0153\u014d\3\2\2\2\u0153\u0154\3\2"+
		"\2\2\u0154d\3\2\2\2\u0155\u0156\t\4\2\2\u0156f\3\2\2\2\u0157\u0158\t\5"+
		"\2\2\u0158\u0159\3\2\2\2\u0159\u015a\b\64\2\2\u015ah\3\2\2\2\u015b\u015c"+
		"\7\61\2\2\u015c\u015d\7,\2\2\u015d\u0161\3\2\2\2\u015e\u0160\13\2\2\2"+
		"\u015f\u015e\3\2\2\2\u0160\u0163\3\2\2\2\u0161\u0162\3\2\2\2\u0161\u015f"+
		"\3\2\2\2\u0162\u0164\3\2\2\2\u0163\u0161\3\2\2\2\u0164\u0165\7,\2\2\u0165"+
		"\u0166\7\61\2\2\u0166\u0167\3\2\2\2\u0167\u0168\b\65\3\2\u0168j\3\2\2"+
		"\2\u0169\u016a\7\61\2\2\u016a\u016b\7\61\2\2\u016b\u016f\3\2\2\2\u016c"+
		"\u016e\n\6\2\2\u016d\u016c\3\2\2\2\u016e\u0171\3\2\2\2\u016f\u016d\3\2"+
		"\2\2\u016f\u0170\3\2\2\2\u0170\u0172\3\2\2\2\u0171\u016f\3\2\2\2\u0172"+
		"\u0173\b\66\3\2\u0173l\3\2\2\2\f\2\u0115\u0117\u011e\u0125\u014b\u0151"+
		"\u0153\u0161\u016f\4\b\2\2\2\3\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}