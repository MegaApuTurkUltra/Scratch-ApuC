// Generated from ScratchCLike.g4 by ANTLR 4.4

  package apu.antlr.clike;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class ScratchCLikeLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		BOOL_TRUE=1, IF_TAG=2, ELSE_TAG=3, BOOL_AND=4, BOOL_OR=5, BOOL_NOT=6, 
		BOOL_EQUALS=7, BOOL_NEQUALS=8, BOOL_GT=9, BOOL_LT=10, BOOL_GTE=11, BOOL_LTE=12, 
		MATH_PLUS=13, MATH_MINUS=14, MATH_TIMES=15, MATH_DIVIDE=16, MATH_MODULO=17, 
		FOR_TAG=18, WHILE_TAG=19, METHOD_DEF_TAG=20, ATOMIC_METHOD_TAG=21, RETURN_TAG=22, 
		WHEN_TAG=23, WHEN_CLICKED=24, WHEN_RECEIVE=25, WHEN_KEY=26, WHEN_CLONED=27, 
		WHEN_SENSOR=28, WHEN_FLAG=29, REPEAT_TAG=30, SINGLE_FRAME_TAG=31, ARRAY_TAG=32, 
		IDENTIFIER=33, STRINGLITERAL=34, OPENP=35, CLOSEP=36, OPENB=37, CLOSEB=38, 
		SEMICOLON=39, EQUALS=40, PLUS_EQUALS=41, MINUS_EQUALS=42, PLUS_PLUS=43, 
		MINUS_MINUS=44, COMMA=45, OPENC=46, CLOSEC=47, NUMBER=48, LETTER=49, WS=50, 
		BlockComment=51, LineComment=52;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'", "'4'"
	};
	public static final String[] ruleNames = {
		"BOOL_TRUE", "IF_TAG", "ELSE_TAG", "BOOL_AND", "BOOL_OR", "BOOL_NOT", 
		"BOOL_EQUALS", "BOOL_NEQUALS", "BOOL_GT", "BOOL_LT", "BOOL_GTE", "BOOL_LTE", 
		"MATH_PLUS", "MATH_MINUS", "MATH_TIMES", "MATH_DIVIDE", "MATH_MODULO", 
		"FOR_TAG", "WHILE_TAG", "METHOD_DEF_TAG", "ATOMIC_METHOD_TAG", "RETURN_TAG", 
		"WHEN_TAG", "WHEN_CLICKED", "WHEN_RECEIVE", "WHEN_KEY", "WHEN_CLONED", 
		"WHEN_SENSOR", "WHEN_FLAG", "REPEAT_TAG", "SINGLE_FRAME_TAG", "ARRAY_TAG", 
		"IDENTIFIER", "STRINGLITERAL", "AChar", "AEscapeSequence", "OPENP", "CLOSEP", 
		"OPENB", "CLOSEB", "SEMICOLON", "EQUALS", "PLUS_EQUALS", "MINUS_EQUALS", 
		"PLUS_PLUS", "MINUS_MINUS", "COMMA", "OPENC", "CLOSEC", "NUMBER", "LETTER", 
		"WS", "BlockComment", "LineComment"
	};


	public ScratchCLikeLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "ScratchCLike.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\66\u017c\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\4\67\t\67\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3"+
		"\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\t\3\t"+
		"\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\17\3\17\3\20"+
		"\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24"+
		"\3\24\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27"+
		"\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31"+
		"\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32"+
		"\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34"+
		"\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35"+
		"\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36"+
		"\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 "+
		"\3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\7\"\u011e"+
		"\n\"\f\"\16\"\u0121\13\"\3#\3#\7#\u0125\n#\f#\16#\u0128\13#\3#\3#\3$\3"+
		"$\5$\u012e\n$\3%\3%\3%\3&\3&\3\'\3\'\3(\3(\3)\3)\3*\3*\3+\3+\3,\3,\3,"+
		"\3-\3-\3-\3.\3.\3.\3/\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62\3\63\6\63\u0152"+
		"\n\63\r\63\16\63\u0153\3\63\3\63\6\63\u0158\n\63\r\63\16\63\u0159\5\63"+
		"\u015c\n\63\3\64\3\64\3\65\3\65\3\65\3\65\3\66\3\66\3\66\3\66\7\66\u0168"+
		"\n\66\f\66\16\66\u016b\13\66\3\66\3\66\3\66\3\66\3\66\3\67\3\67\3\67\3"+
		"\67\7\67\u0176\n\67\f\67\16\67\u0179\13\67\3\67\3\67\3\u0169\28\3\3\5"+
		"\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21"+
		"!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!"+
		"A\"C#E$G\2I\2K%M&O\'Q(S)U*W+Y,[-]._/a\60c\61e\62g\63i\64k\65m\66\3\2\7"+
		"\6\2\f\f\17\17$$^^\f\2$$))AA^^cdhhppttvvxx\5\2C\\aac|\5\2\13\f\17\17\""+
		"\"\4\2\f\f\17\17\u0182\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2"+
		"\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25"+
		"\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2"+
		"\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2"+
		"\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3"+
		"\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2"+
		"\2\2E\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2"+
		"U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3"+
		"\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2"+
		"\2\3o\3\2\2\2\5t\3\2\2\2\7w\3\2\2\2\t|\3\2\2\2\13\177\3\2\2\2\r\u0082"+
		"\3\2\2\2\17\u0084\3\2\2\2\21\u0087\3\2\2\2\23\u008a\3\2\2\2\25\u008c\3"+
		"\2\2\2\27\u008e\3\2\2\2\31\u0091\3\2\2\2\33\u0094\3\2\2\2\35\u0096\3\2"+
		"\2\2\37\u0098\3\2\2\2!\u009a\3\2\2\2#\u009c\3\2\2\2%\u009e\3\2\2\2\'\u00a2"+
		"\3\2\2\2)\u00a8\3\2\2\2+\u00ac\3\2\2\2-\u00b4\3\2\2\2/\u00bb\3\2\2\2\61"+
		"\u00c1\3\2\2\2\63\u00c9\3\2\2\2\65\u00d2\3\2\2\2\67\u00dd\3\2\2\29\u00e4"+
		"\3\2\2\2;\u00f6\3\2\2\2=\u0100\3\2\2\2?\u0107\3\2\2\2A\u0114\3\2\2\2C"+
		"\u011a\3\2\2\2E\u0122\3\2\2\2G\u012d\3\2\2\2I\u012f\3\2\2\2K\u0132\3\2"+
		"\2\2M\u0134\3\2\2\2O\u0136\3\2\2\2Q\u0138\3\2\2\2S\u013a\3\2\2\2U\u013c"+
		"\3\2\2\2W\u013e\3\2\2\2Y\u0141\3\2\2\2[\u0144\3\2\2\2]\u0147\3\2\2\2_"+
		"\u014a\3\2\2\2a\u014c\3\2\2\2c\u014e\3\2\2\2e\u0151\3\2\2\2g\u015d\3\2"+
		"\2\2i\u015f\3\2\2\2k\u0163\3\2\2\2m\u0171\3\2\2\2op\7v\2\2pq\7t\2\2qr"+
		"\7w\2\2rs\7g\2\2s\4\3\2\2\2tu\7k\2\2uv\7h\2\2v\6\3\2\2\2wx\7g\2\2xy\7"+
		"n\2\2yz\7u\2\2z{\7g\2\2{\b\3\2\2\2|}\7(\2\2}~\7(\2\2~\n\3\2\2\2\177\u0080"+
		"\7~\2\2\u0080\u0081\7~\2\2\u0081\f\3\2\2\2\u0082\u0083\7#\2\2\u0083\16"+
		"\3\2\2\2\u0084\u0085\7?\2\2\u0085\u0086\7?\2\2\u0086\20\3\2\2\2\u0087"+
		"\u0088\7#\2\2\u0088\u0089\7?\2\2\u0089\22\3\2\2\2\u008a\u008b\7@\2\2\u008b"+
		"\24\3\2\2\2\u008c\u008d\7>\2\2\u008d\26\3\2\2\2\u008e\u008f\7@\2\2\u008f"+
		"\u0090\7?\2\2\u0090\30\3\2\2\2\u0091\u0092\7>\2\2\u0092\u0093\7?\2\2\u0093"+
		"\32\3\2\2\2\u0094\u0095\7-\2\2\u0095\34\3\2\2\2\u0096\u0097\7/\2\2\u0097"+
		"\36\3\2\2\2\u0098\u0099\7,\2\2\u0099 \3\2\2\2\u009a\u009b\7\61\2\2\u009b"+
		"\"\3\2\2\2\u009c\u009d\7\'\2\2\u009d$\3\2\2\2\u009e\u009f\7h\2\2\u009f"+
		"\u00a0\7q\2\2\u00a0\u00a1\7t\2\2\u00a1&\3\2\2\2\u00a2\u00a3\7y\2\2\u00a3"+
		"\u00a4\7j\2\2\u00a4\u00a5\7k\2\2\u00a5\u00a6\7n\2\2\u00a6\u00a7\7g\2\2"+
		"\u00a7(\3\2\2\2\u00a8\u00a9\7f\2\2\u00a9\u00aa\7g\2\2\u00aa\u00ab\7h\2"+
		"\2\u00ab*\3\2\2\2\u00ac\u00ad\7B\2\2\u00ad\u00ae\7c\2\2\u00ae\u00af\7"+
		"v\2\2\u00af\u00b0\7q\2\2\u00b0\u00b1\7o\2\2\u00b1\u00b2\7k\2\2\u00b2\u00b3"+
		"\7e\2\2\u00b3,\3\2\2\2\u00b4\u00b5\7t\2\2\u00b5\u00b6\7g\2\2\u00b6\u00b7"+
		"\7v\2\2\u00b7\u00b8\7w\2\2\u00b8\u00b9\7t\2\2\u00b9\u00ba\7p\2\2\u00ba"+
		".\3\2\2\2\u00bb\u00bc\7B\2\2\u00bc\u00bd\7y\2\2\u00bd\u00be\7j\2\2\u00be"+
		"\u00bf\7g\2\2\u00bf\u00c0\7p\2\2\u00c0\60\3\2\2\2\u00c1\u00c2\7e\2\2\u00c2"+
		"\u00c3\7n\2\2\u00c3\u00c4\7k\2\2\u00c4\u00c5\7e\2\2\u00c5\u00c6\7m\2\2"+
		"\u00c6\u00c7\7g\2\2\u00c7\u00c8\7f\2\2\u00c8\62\3\2\2\2\u00c9\u00ca\7"+
		"t\2\2\u00ca\u00cb\7g\2\2\u00cb\u00cc\7e\2\2\u00cc\u00cd\7g\2\2\u00cd\u00ce"+
		"\7k\2\2\u00ce\u00cf\7x\2\2\u00cf\u00d0\7g\2\2\u00d0\u00d1\7f\2\2\u00d1"+
		"\64\3\2\2\2\u00d2\u00d3\7m\2\2\u00d3\u00d4\7g\2\2\u00d4\u00d5\7{\2\2\u00d5"+
		"\u00d6\7R\2\2\u00d6\u00d7\7t\2\2\u00d7\u00d8\7g\2\2\u00d8\u00d9\7u\2\2"+
		"\u00d9\u00da\7u\2\2\u00da\u00db\7g\2\2\u00db\u00dc\7f\2\2\u00dc\66\3\2"+
		"\2\2\u00dd\u00de\7e\2\2\u00de\u00df\7n\2\2\u00df\u00e0\7q\2\2\u00e0\u00e1"+
		"\7p\2\2\u00e1\u00e2\7g\2\2\u00e2\u00e3\7f\2\2\u00e38\3\2\2\2\u00e4\u00e5"+
		"\7u\2\2\u00e5\u00e6\7g\2\2\u00e6\u00e7\7p\2\2\u00e7\u00e8\7u\2\2\u00e8"+
		"\u00e9\7q\2\2\u00e9\u00ea\7t\2\2\u00ea\u00eb\7I\2\2\u00eb\u00ec\7t\2\2"+
		"\u00ec\u00ed\7g\2\2\u00ed\u00ee\7c\2\2\u00ee\u00ef\7v\2\2\u00ef\u00f0"+
		"\7g\2\2\u00f0\u00f1\7t\2\2\u00f1\u00f2\7V\2\2\u00f2\u00f3\7j\2\2\u00f3"+
		"\u00f4\7c\2\2\u00f4\u00f5\7p\2\2\u00f5:\3\2\2\2\u00f6\u00f7\7i\2\2\u00f7"+
		"\u00f8\7t\2\2\u00f8\u00f9\7g\2\2\u00f9\u00fa\7g\2\2\u00fa\u00fb\7p\2\2"+
		"\u00fb\u00fc\7H\2\2\u00fc\u00fd\7n\2\2\u00fd\u00fe\7c\2\2\u00fe\u00ff"+
		"\7i\2\2\u00ff<\3\2\2\2\u0100\u0101\7t\2\2\u0101\u0102\7g\2\2\u0102\u0103"+
		"\7r\2\2\u0103\u0104\7g\2\2\u0104\u0105\7c\2\2\u0105\u0106\7v\2\2\u0106"+
		">\3\2\2\2\u0107\u0108\7B\2\2\u0108\u0109\7u\2\2\u0109\u010a\7k\2\2\u010a"+
		"\u010b\7p\2\2\u010b\u010c\7i\2\2\u010c\u010d\7n\2\2\u010d\u010e\7g\2\2"+
		"\u010e\u010f\7h\2\2\u010f\u0110\7t\2\2\u0110\u0111\7c\2\2\u0111\u0112"+
		"\7o\2\2\u0112\u0113\7g\2\2\u0113@\3\2\2\2\u0114\u0115\7c\2\2\u0115\u0116"+
		"\7t\2\2\u0116\u0117\7t\2\2\u0117\u0118\7c\2\2\u0118\u0119\7{\2\2\u0119"+
		"B\3\2\2\2\u011a\u011f\5g\64\2\u011b\u011e\5g\64\2\u011c\u011e\5e\63\2"+
		"\u011d\u011b\3\2\2\2\u011d\u011c\3\2\2\2\u011e\u0121\3\2\2\2\u011f\u011d"+
		"\3\2\2\2\u011f\u0120\3\2\2\2\u0120D\3\2\2\2\u0121\u011f\3\2\2\2\u0122"+
		"\u0126\7$\2\2\u0123\u0125\5G$\2\u0124\u0123\3\2\2\2\u0125\u0128\3\2\2"+
		"\2\u0126\u0124\3\2\2\2\u0126\u0127\3\2\2\2\u0127\u0129\3\2\2\2\u0128\u0126"+
		"\3\2\2\2\u0129\u012a\7$\2\2\u012aF\3\2\2\2\u012b\u012e\n\2\2\2\u012c\u012e"+
		"\5I%\2\u012d\u012b\3\2\2\2\u012d\u012c\3\2\2\2\u012eH\3\2\2\2\u012f\u0130"+
		"\7^\2\2\u0130\u0131\t\3\2\2\u0131J\3\2\2\2\u0132\u0133\7*\2\2\u0133L\3"+
		"\2\2\2\u0134\u0135\7+\2\2\u0135N\3\2\2\2\u0136\u0137\7}\2\2\u0137P\3\2"+
		"\2\2\u0138\u0139\7\177\2\2\u0139R\3\2\2\2\u013a\u013b\7=\2\2\u013bT\3"+
		"\2\2\2\u013c\u013d\7?\2\2\u013dV\3\2\2\2\u013e\u013f\7-\2\2\u013f\u0140"+
		"\7?\2\2\u0140X\3\2\2\2\u0141\u0142\7/\2\2\u0142\u0143\7?\2\2\u0143Z\3"+
		"\2\2\2\u0144\u0145\7-\2\2\u0145\u0146\7-\2\2\u0146\\\3\2\2\2\u0147\u0148"+
		"\7/\2\2\u0148\u0149\7/\2\2\u0149^\3\2\2\2\u014a\u014b\7.\2\2\u014b`\3"+
		"\2\2\2\u014c\u014d\7]\2\2\u014db\3\2\2\2\u014e\u014f\7_\2\2\u014fd\3\2"+
		"\2\2\u0150\u0152\4\62;\2\u0151\u0150\3\2\2\2\u0152\u0153\3\2\2\2\u0153"+
		"\u0151\3\2\2\2\u0153\u0154\3\2\2\2\u0154\u015b\3\2\2\2\u0155\u0157\7\60"+
		"\2\2\u0156\u0158\4\62;\2\u0157\u0156\3\2\2\2\u0158\u0159\3\2\2\2\u0159"+
		"\u0157\3\2\2\2\u0159\u015a\3\2\2\2\u015a\u015c\3\2\2\2\u015b\u0155\3\2"+
		"\2\2\u015b\u015c\3\2\2\2\u015cf\3\2\2\2\u015d\u015e\t\4\2\2\u015eh\3\2"+
		"\2\2\u015f\u0160\t\5\2\2\u0160\u0161\3\2\2\2\u0161\u0162\b\65\2\2\u0162"+
		"j\3\2\2\2\u0163\u0164\7\61\2\2\u0164\u0165\7,\2\2\u0165\u0169\3\2\2\2"+
		"\u0166\u0168\13\2\2\2\u0167\u0166\3\2\2\2\u0168\u016b\3\2\2\2\u0169\u016a"+
		"\3\2\2\2\u0169\u0167\3\2\2\2\u016a\u016c\3\2\2\2\u016b\u0169\3\2\2\2\u016c"+
		"\u016d\7,\2\2\u016d\u016e\7\61\2\2\u016e\u016f\3\2\2\2\u016f\u0170\b\66"+
		"\3\2\u0170l\3\2\2\2\u0171\u0172\7\61\2\2\u0172\u0173\7\61\2\2\u0173\u0177"+
		"\3\2\2\2\u0174\u0176\n\6\2\2\u0175\u0174\3\2\2\2\u0176\u0179\3\2\2\2\u0177"+
		"\u0175\3\2\2\2\u0177\u0178\3\2\2\2\u0178\u017a\3\2\2\2\u0179\u0177\3\2"+
		"\2\2\u017a\u017b\b\67\3\2\u017bn\3\2\2\2\f\2\u011d\u011f\u0126\u012d\u0153"+
		"\u0159\u015b\u0169\u0177\4\b\2\2\2\3\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}